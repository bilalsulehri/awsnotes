table has two kind of primary keys
1. only consists of partitioned key, in this case every key will be unique
2. or can also have Sort key, in this case multiple items can share same partitioned key, but sort key should be unique per partitioned key

dynamo db stores data in partitions and partitions are backed by SSds
sorting will do sorting within partition

 The term hash attribute derives from the use of an internal hash function in DynamoDB that evenly distributes data items across partitions, based on their partition key values.
 
 The sort key of an item is also known as its range attribute. The term range attribute derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.


table has items including primary key and attributes in document style


Attribute types 
Scalar types : string, number, binary, booelan, null
Document type : list, map
set : Number sets, string sets, binary sets

Read/Write capacity modes:-
it controls how you are charged for read and write throughput and how you manage your capacity
two types: on-demand and provisioned (default) 

note: Auto scaling is not a silver bullet, it might take some time to scale up while data is being written, becuase Cloud watch triggers alarm of reaching throttle and then it initiates process of scaling up.

Throughput
===========
Important terms:
WCU=WRite capacity unit:
1WCU = 1 write of 1 item of 1kb or less per second.
rounds up to the nearest integer 

WCUs are consumed when creating, updating and deleting items

RCU=Read capacity unit:
1RCU=1 read of 1 item of 4kb or less per second, rounds up to the nearest 4kb unit, for strongly consistent read
for eventually consistent read, same speed mentioned above would require 0.5 RCU


on-demand : 1000 requests per second. only pay for what you use. instantly accomodates workloads as it goes up and down.

you can change provision capacity from autoscale to on demand only once per day 

On-demand mode is a good option if any of the following are true:

-You create new tables with unknown workloads.

-You have unpredictable application traffic.

-You prefer the ease of paying for only what you use.


on-demand can handle double the peak from last peak, without any throttle, if it's less than in 30 minutes
e.g. if it was 25000 request per second it can go to 50000 request per second

INDEXING
========
If you create indexes, there are two types, local secondary index and global secondary index,

for local, create index at creationg time and it can be with same partition key

Global works in the same manner, but you can not have same partitioned key as table, but cannot do strongly consistent reads.
global can be created later they also have independed WCU and RCU

Limits :  20 global secondary indexes (default limit) and 5 local secondary indexes per table.
 
 
When you create an index, you specify which attributes will be copied, or projected, from the base table to the index. At a minimum, DynamoDB projects the key attributes from the base table into the index. 

dynamo db common errors, 
dynamo db limits


dynamo db streams are ways to capture changes to database and they are kept for 24 hours, if you have turned on streams


